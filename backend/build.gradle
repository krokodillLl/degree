buildscript {
    ext {
        springBootVersion = '2.4.2'
    }
    repositories {
        maven { url 'https://plugins.gradle.org/m2/' }
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'org.springframework.boot' version '2.4.2'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'idea'
    id 'maven'
    id 'java-library'
}

group 'com.krokodillLl'
version '1.0'

compileJava {
    options.debug = true
    options.encoding = "UTF-8"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
    api('org.springframework.boot:spring-boot-starter-web') { exclude module: "spring-boot-starter-logging" }
    api('org.springframework.boot:spring-boot-starter-web-services') { exclude module: "spring-boot-starter-logging" }

    implementation('org.springframework.boot:spring-boot-starter-log4j2')
}

test {
    useJUnitPlatform()
}

def artifactGroup = group
def artifactBaseName = 'degree'

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

bootJar {
    archiveFileName = "degree-${version}.jar"
    manifest {
        attributes("Implementation-Title": "Gradle",
                "Implementation-Version": archiveVersion
        )
    }

    from("$buildDir/pom.xml") {
        into "META-INF/maven/$artifactGroup/$artifactBaseName"
    }
    from('../frontend/dist') {
        into 'static'
    }
}

task writeNewPom {
    doLast {
        pom {
            project {
                groupId artifactGroup
                artifactId artifactBaseName
                version version
            }
        }.writeTo("$buildDir/pom.xml")
    }
}

bootJar.dependsOn(['jar',':frontend:assemble', 'writeNewPom'])